<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnXem.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnThoat.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>